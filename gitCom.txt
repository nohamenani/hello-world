1. To set the author name for commits -

git config -global user.name "<name>"



2. To set the email for commits -

git config -global user.email "<email>"



3. To see current settings -

git config


4. To initialize new repository -

git init <repo name>



5. To add file to staging area -

git add <filename>


To add one or more files to staging area -

git add * 



6. To record staged files permanently in the version history -

git commit -m "<message>"



7. To send the committed changes of master branch to your remote repository -

git push



8. To list the files to be committed -

git status



9. To fetch and merge changes on the remote server to your working directory -

git pull



10. To unstage file/s -

git reset



11. To list all the local branches in the current repository -

git branch 



12. create new branch -

git branch <branch>



13. To switch from one branch to another -

git checkout <branch>



14. To create new branch and switch to it -

git checkout -b <branch>



15. To merge given branchâ€™s history into the current branch -

git merge <branch2>

------------------------------------------------------------------------------------------


A branch is essentially is a unique set of code changes with a unique name. Each repository can have one or more branches. ... 
This is the official working version of your project, and the one you see when you visit the project repository at github.com/yourname/projectname.
 Do not mess with the master.